name: Deploy public image

on:
  workflow_call:
    inputs:
      cloud-provider:
        required: false
        type: string
        default: local
      metadata:
        required: false
        type: string
        default: "[ orphan ]"
      host:
        required: false
        type: string
        default: 'test.connectorsapp.com'
      host-path:
        required: false
        type: string
        default: '/'
      port:
        required: false
        type: string
        default: '8080'
      registry:
        required: false
        type: string
        default: 'docker.io'
    secrets:
      cloud-token:
        required: false
      github-token:
        required: false
      dockerhub_username:
        required: false
      dockerhub_token:
        required: false
      db_token:
        required: false
      image-username:
        required: false
      image-pwd:
        required: false

jobs:
  build-and-deploy-civo-with-private-image:
    runs-on: ubuntu-22.04
    steps:
      - name: build and deploy civo provider
        run: |
          echo ${{ inputs.cloud-provider }}

      - uses: actions/checkout@v4

      - name: list files
        run: |
          echo "----------in deploy-civo-with-public-image -----------"
          ls -la
          echo "---------------------"

      - name: 1. Repo already exist for working project
        id: validate-repo
        env:
          GH_TOKEN: ${{ secrets.github-token }}
        run: |
          echo "----------in action.yml in deploy-public-img -----------"
          ls
          echo "---------------------"
          echo "EXIST_REPO=$(gh repo view snow-monkeys-org/app-${{ github.event.repository.name }}-helm-civo | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: 3. validate Dockerfile
        id: validate-dockerfile
        run: |
          if [ -e Dockerfile ] 
          then
            echo "EXIST_DOCKERFILE='ok'" >> $GITHUB_OUTPUT
          else
            echo "EXIST_DOCKERFILE='dont'" >> $GITHUB_OUTPUT
          fi
      
      - name: 4. Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}

      - name: 5. Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 6. Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm64/v8

      - name: 7.1. Build and push
        if: contains(steps.validate-dockerfile.outputs.EXIST_DOCKERFILE, 'ok')
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm64/v8
          tags: |
            yabinm/${{ github.event.repository.name }}-img:${{github.sha}}
            yabinm/${{ github.event.repository.name }}-img:latest

      - name: 7.2. Build and push Docker images with Nixpacks
        if: contains(steps.validate-dockerfile.outputs.EXIST_DOCKERFILE, 'dont')
        uses: iloveitaly/github-action-nixpacks@main
        with:
          cache: true
          cache_tag: docker.io/yabinm/${{ github.event.repository.name }}-img:latest
          push: true
          platforms: "linux/amd64,linux/arm64,linux/arm64/v8"
          tags: |
            docker.io/yabinm/${{ github.event.repository.name }}-img:${{github.sha}}
            docker.io/yabinm/${{ github.event.repository.name }}-img:latest

      #     condition if repository doesnt exist
      - name: 8.1. with private image - repo doesnt exist for working project - clone and exec helm repo for the working project
        if: ${{ ! steps.validate-repo.outputs.EXIST_REPO }}
        env:
          GH_TOKEN: ${{ secrets.github-token }}
        run: |
          echo "doesnt exist snow-monkeys-org/app-${{ github.event.repository.name }}-helm-civo"
          git config --global user.email yabin.monroy.1@gmail.com && git config --global user.name yabinboxes
          echo "cloning config repo helm-template-public-img-nginx"
          git clone https://oath2:${{ secrets.github-token }}@github.com/snow-monkeys-org/helm-template-public-img-nginx.git
          echo "creating app-${{ github.event.repository.name }}-helm-civo"
          gh repo create snow-monkeys-org/app-${{ github.event.repository.name }}-helm-civo --private
          mkdir app-${{ github.event.repository.name }}-helm-civo
          echo "---------------------"
          ls
          echo "---------------------"
          cd helm-template-public-img-nginx
          cp -R application.yaml repo-creds.yaml secret.yaml ../app-${{ github.event.repository.name }}-helm-civo/
          cp -R myapp-helm ../app-${{ github.event.repository.name }}-helm-civo/myapp-helm/
          cd ..
          cd app-${{ github.event.repository.name }}-helm-civo
          echo "---------------------"
          ls
          echo "---------------------"
          echo "---------insert into secret.yaml------------"
          sed -i "s,monkeybase64pwd,${{ steps.image-pwd.outputs.IMAGE_PWD }}," secret.yaml
          echo "---------------------"
          echo "---------insert into values.yaml------------"
          sed -i "s,name:.*,name:\ app-${{ github.event.repository.name }}-helm-civo," myapp-helm/values.yaml
          sed -i "s,repository:.*,repository:\ docker.io/yabinm/${{ github.event.repository.name }}-img," myapp-helm/values.yaml
          sed -i "/^service:/,/port:/{/^\([[:space:]]*port: \).*/s//\1${{ inputs.port }}/}" myapp-helm/values.yaml
          sed -i "s,tag:.*,tag:\ ${{github.sha}}," myapp-helm/values.yaml
          sed -i "s,host:.*,host:\ ${{ inputs.host }}," myapp-helm/values.yaml
          sed -i "s,path:.*,path:\ ${{ inputs.host-path }}," myapp-helm/values.yaml
          cat myapp-helm/values.yaml
          echo "---------------------"
          echo "---------insert into application.yaml------------"
          sed -i "s,name:.*,name:\ app-${{ github.event.repository.name }}-helm-civo," application.yaml
          sed -i "/^httpGet:/,/path:/{/^\([[:space:]]*path: \).*/s//\1health/}" application.yaml
          sed -i "/^ingress:/,/enabled:/{/^\([[:space:]]*enabled: \).*/s//\1true/}" application.yaml
          sed -i "s,monkeyrepourl,https://github.com/snow-monkeys-org/app-${{ github.event.repository.name }}-helm-civo.git," application.yaml
          cat application.yaml
          echo "---------------------"
          echo "--------insert into creds-------------"
          sed -i "s,name:.*,name:\ app-${{ github.event.repository.name }}-helm-civo," repo-creds.yaml
          sed -i "s,username:.*,username:\ yabinboxes," repo-creds.yaml
          sed -i "s,monkeyrepourl,https://github.com/snow-monkeys-org/app-${{ github.event.repository.name }}-helm-civo.git," repo-creds.yaml
          sed -i "s,monkeypassword,${{ secrets.github-token }}," repo-creds.yaml
          cat repo-creds.yaml
          echo "---------------------"
          git config --global user.email yabin.monroy.1@gmail.com && git config --global user.name yabinboxes
          git config --global init.defaultBranch main
          git init
          git add .
          git commit -m "init new helm repo"
          git branch -M main
          git remote add origin https://yabinboxes:${{ secrets.github-token }}@github.com/snow-monkeys-org/app-${{ github.event.repository.name }}-helm-civo.git
          git push -u origin main
          echo "---------------------"
          ls
          echo "---------------------"

      - name: 8.2. with private image - update repo
        if: ${{ steps.validate-repo.outputs.EXIST_REPO }}
        run: |
          echo "----------------- prepare update cloning -----------------"
          mkdir cloning${{ github.sha }}
          cd cloning${{ github.sha }}
          echo "promoting into dev environment"
          git config --global user.email yabin.monroy.1@gmail.com && git config --global user.name yabinboxes
          git clone https://oath2:${{ secrets.github-token }}@github.com/snow-monkeys-org/app-${{ github.event.repository.name }}-helm-civo.git
          cd app-${{ github.event.repository.name }}-helm-civo
          echo "---------------------"
          ls
          echo "---------------------"
          echo "---------insert into values.yaml------------"
          sed -i "s,repository:.*,repository:\ docker.io/yabinm/${{ github.event.repository.name }}-img," myapp-helm/values.yaml
          sed -i "/^service:/,/port:/{/^\([[:space:]]*port: \).*/s//\1${{ inputs.port }}/}" myapp-helm/values.yaml
          sed -i "s,tag:.*,tag:\ ${{github.sha}}," myapp-helm/values.yaml
          sed -i "s,host:.*,host:\ ${{ inputs.host }}," myapp-helm/values.yaml
          sed -i "s,path:.*,path:\ ${{ inputs.host-path }}," myapp-helm/values.yaml
          cat myapp-helm/values.yaml
          echo "---------------------"
          echo "checkout main branch"
          git checkout main
          echo "updating image tag in values file"
          git add . && git commit -m "update image tag"
          git push

      - name: 9. apply local kubernetes
        run: |
          echo "------ local apply to kubernetes ------"
          BASE64_CONTENT=$(base64 application.yaml)
          echo $BASE64_CONTENT
          curl -X POST \
          -H "Content-Type: application/json" \
          -d "{\"name\": \"${{ github.event.repository.name }}-argo-app\", \"base64FileStr\": \"$BASE64_CONTENT\" }" \
          https://connectors.ngrok.app/kubectl/apply

