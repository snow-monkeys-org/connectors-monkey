name: Deploy using connectors monkey

on:
  workflow_call:
    inputs:
      cloud-provider: 
        required: false
        type: string
        default: local
      metadata:
        required: false
        type: string
        default: "[ orphan ]"
      host: 
        required: false
        type: string
        default: 'test.connectorsapp.com'
      host-path: 
        required: false
        type: string
        default: '/'
      port:
        required: false
        type: string
        default: '8080'
      image:
        required: false
        type: string
        default: ''
      registry:
        required: false
        type: string
        default: 'docker_hub'
    secrets:
      cloud-token:
        required: false
      github-token:
        required: false
      dockerhub_username:
        required: false
      dockerhub_token:
        required: false
      db_token:
        required: false

jobs:      
  build-local:
    runs-on: ubuntu-22.04
    if: inputs.cloud-provider == 'local' 
        
    steps:
              
      - name: local condition
        run: | 
          echo ${{ inputs.cloud-provider }}     
                  
  build-civo:
    runs-on: ubuntu-22.04
    env:
      POSTGRES_PASSWORD: db_token
    if: inputs.cloud-provider == 'civo'

    steps:      
      - name: civo conditions
        run: |
          echo ${{ inputs.cloud-provider }}

#     build repo with Dockerfile
      
      - uses: actions/checkout@v4

      - name: validate Dockerfile
        id: validate-dockerfile
        run: |
          echo "EXIST_DOCKERFILE=$(find . -type -f -iname Dockerfile)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        if:  ${{ inputs.image != '' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if:  ${{ inputs.image != '' }}
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if:  ${{ inputs.image != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}

      - name: Build and push
        if:  ${{ inputs.image != '' && steps.validate-dockerfile.outputs.EXIST_DOCKERFILE != '' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            yabinm/app:${{github.sha}}
            yabinm/app:latest

      - name: Build and push Docker images with Nixpacks
        if:  ${{ inputs.image != '' && steps.validate-dockerfile.outputs.EXIST_DOCKERFILE == '' }}
        uses: iloveitaly/github-action-nixpacks@main
        with:
          push: true
          cache: true
          cache_tag: yabinm/app
          platforms: "linux/amd64,linux/arm64"
          tags: |
            yabinm/app:${{github.sha}}
            yabinm/app:latest

      - name: docker ps
        if:  ${{ inputs.image != '' }}
        run: |
          docker image ls
          docker ps
          ls 

      - name: assign image empty
        id: assign-image
        run: |
          if [[  ${{ inputs.image == '' }} ]]; then
            echo "IMAGE=${{ inputs.image }}" >> $GITHUB_OUTPUT
          else 
            echo "IMAGE=yabinm/app" >> $GITHUB_OUTPUT

#     check if project exist
      - name: clone and exec helm repo for the working project
        id: validate-repo
        env:
          GH_TOKEN: ${{ secrets.github-token }}
        run: |
          echo "EXIST_REPO=$(gh repo view snow-monkeys-org/${{ github.event.repository.name }}-helm-civo | tr '\n' ' ')" >> $GITHUB_OUTPUT
       

#     if repo doesnt exist - clone & exec helm
      - name: repo doesnt exist for working project - clone and exec helm repo for the working project
        if:  ${{ ! steps.validate-repo.outputs.EXIST_REPO }}
        env:
          GH_TOKEN: ${{ secrets.github-token }}
        run: |
          echo "doesnt exist snow-monkeys-org/${{ github.event.repository.name }}-helm-civo"
          git config --global user.email yabin.monroy.1@gmail.com && git config --global user.name yabinboxes
          echo "cloning config repo helm-template"
          git clone https://oath2:${{ secrets.github-token }}@github.com/snow-monkeys-org/helm-template.git
          echo "creating ${{ github.event.repository.name }}-helm-civo"
          gh repo create snow-monkeys-org/${{ github.event.repository.name }}-helm-civo --private
          mkdir ${{ github.event.repository.name }}-helm-civo
          echo "---------------------"
          ls
          echo "---------------------"
          cd helm-template
          cp -R application.yaml repo-creds.yaml ../${{ github.event.repository.name }}-helm-civo/
          cp -R myapp-helm ../${{ github.event.repository.name }}-helm-civo/myapp-helm/
          cd ..
          cd ${{ github.event.repository.name }}-helm-civo
          echo "---------------------"
          ls
          echo "---------------------"
          git config --global user.email yabin.monroy.1@gmail.com && git config --global user.name yabinboxes
          git config --global init.defaultBranch main
          git init
          git add .
          git commit -m "init new helm repo"
          git branch -M main
          git remote add origin https://yabinboxes:${{ secrets.github-token }}@github.com/snow-monkeys-org/${{ github.event.repository.name }}-helm-civo.git
          git push -u origin main
          echo "---------------------"
          ls
          echo "---------------------"
          
      #     if repo already exist
      - name: repo already exist for working project
        if:  ${{ steps.validate-repo.outputs.EXIST_REPO }}
        run: |
          echo "already exist snow-monkeys-org/${{ github.event.repository.name }}-helm-civo"
          git config --global user.email yabin.monroy.1@gmail.com && git config --global user.name yabinboxes
          echo "cloning repo ${{ github.event.repository.name }}-helm-civo"
          git clone https://oath2:${{ secrets.github-token }}@github.com/snow-monkeys-org/${{ github.event.repository.name }}-helm-civo.git
          cd ${{ github.event.repository.name }}-helm-civo
          echo "---------------------"
          ls
          echo "---------------------"

      - name: modify Chart yaml
        if:  ${{ ! steps.validate-repo.outputs.EXIST_REPO }}
        run: |
          cd ${{ github.event.repository.name }}-helm-civo
          echo "---------display Chart.yaml------------"
          cat myapp-helm/Chart.yaml
          echo "---------------------"
          ls
          echo "---------------------"

      - name: modify values yaml
        run: |
          cd ${{ github.event.repository.name }}-helm-civo
          echo "---------insert into values.yaml------------"
          sed -i "s,name:.*,name:\ ${{ github.event.repository.name }}-helm-civo," myapp-helm/values.yaml
          sed -i "s,repository:.*,repository:\ ${{ steps.assign-image.outputs.EXIST_REPO }}," myapp-helm/values.yaml
          sed -i "/^service:/,/port:/{/^\([[:space:]]*port: \).*/s//\1${{ inputs.port }}/}" myapp-helm/values.yaml
          sed -i "s,host:.*,host:\ ${{ inputs.host }}," myapp-helm/values.yaml
          sed -i "s,path:.*,path:\ ${{ inputs.host-path }}," myapp-helm/values.yaml
          sed -i "s,tag:.*,tag:\ ${{ github.sha }}," myapp-helm/values.yaml
          cat myapp-helm/values.yaml
          echo "---------------------"
          ls
          echo "---------------------"
      
      - name: modify application argocd and credentials
        if:  ${{ ! steps.validate-repo.outputs.EXIST_REPO }}
        run: |
          cd ${{ github.event.repository.name }}-helm-civo
          echo "---------insert into application.yaml------------"
          sed -i "s,name:.*,name:\ ${{ github.event.repository.name }}-helm-civo," application.yaml
          sed -i "/^httpGet:/,/path:/{/^\([[:space:]]*path: \).*/s//\1health/}" application.yaml
          sed -i "/^ingress:/,/enabled:/{/^\([[:space:]]*enabled: \).*/s//\1true/}" application.yaml
          sed -i "s,monkeyrepourl,https://github.com/snow-monkeys-org/${{ github.event.repository.name }}-helm-civo.git," application.yaml
          cat application.yaml
          echo "--------insert into creds-------------"
          sed -i "s,name:.*,name:\ ${{ github.event.repository.name }}-helm-civo," repo-creds.yaml
          sed -i "s,username:.*,username:\ yabinboxes," repo-creds.yaml
          sed -i "s,monkeyrepourl,https://github.com/snow-monkeys-org/${{ github.event.repository.name }}-helm-civo.git," repo-creds.yaml
          sed -i "s,monkeypassword,${{ secrets.github-token }}," repo-creds.yaml
          cat repo-creds.yaml
          echo "commit main"
          git checkout main
          git add . && git commit -m "update deployment"
          git push
          echo "---------------------"
          ls
          echo "---------------------"
          
     
      #   notify  
      - name: connect to civo kubernetes
        if:  ${{ ! steps.validate-repo.outputs.EXIST_REPO }}
        run: |
          cd ${{ github.event.repository.name }}-helm-civo
          curl -sL https://civo.com/get | sh
          civo apikey add my-cluster ${{ secrets.cloud-token }}
          civo kubernetes config k8s_demo_1 --save
          kubectl cluster-info
          kubectl apply -f repo-creds.yaml
          kubectl apply -f application.yaml
      

      - name: create new repo for civo
        run: |
          echo "----------------- prepare update cloning -----------------"
          mkdir cloning${{ github.sha }}
          cd cloning${{ github.sha }}
          echo "promoting into dev environment"
          git config --global user.email yabin.monroy.1@gmail.com && git config --global user.name yabinboxes
          git clone https://oath2:${{ secrets.github-token }}@github.com/snow-monkeys-org/${{ github.event.repository.name }}-helm-civo.git
          cd ${{ github.event.repository.name }}-helm-civo
          sed -i "s,tag:.*,tag:\ ${{ github.sha }}," myapp-helm/values.yaml
          echo "---------------------"
          ls
          echo "---------------------"
          echo "checkout main branch"
          git checkout main
          echo "updating image tag in values file"
          git add . && git commit -m "update image tag"
          git push
          
